pipeline {
    agent any

    environment {
        // GIT_COMMITTER_NAME = 'OrCHUK23'
        // GIT_COMMITTER_EMAIL = 'henor1997@gmail.com'
        DOCKERHUB_CREDENTIALS = credentials('docker_hub_credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout all branches
                    checkout scm
                }
            }
        }

        stage('Unit Tests') {
            when {
                anyOf {
                    branch 'feature'
                    branch 'develop'
                }
            }
            steps {
                script {
                    // Run unit tests using Python unittest
                    sh 'python3 -m unittest test_employees.py'
                }
            }
        }

        stage('Create Image') {
            steps {
                script {
                    // Build Docker image
                    sh 'docker build -t orchuk/employees:${BRANCH_NAME} .'
                }
            }
        }

        stage('Push to Dockerhub') {
            when {
                branch 'master'
            }
            steps {
                script {
                    // Set Git user identity
                    sh 'git config user.name "${GIT_COMMITTER_NAME}"'
                    sh 'git config user.email "${GIT_COMMITTER_EMAIL}"'


                    // Get Docker Hub username and password
                    def credentials = DOCKERHUB_CREDENTIALS(0)
                    def username = credentials.username
                    def password = credentials.password

                    // Log in to Docker Hub
                    sh "docker login -u ${username} -p ${password}"

                    // Tag the Docker image
                    sh 'docker tag orchuk/employees:${BRANCH_NAME} ${username}/employees:${BRANCH_NAME}'

                    // Push the Docker image to Docker Hub
                    sh "docker push ${username}/employees:${BRANCH_NAME}"
                    
                }
            }
        }
    }
}
